@model MunicipalityMvc.Core.Models.IssueReport
@{
    ViewData["Title"] = "Report Submitted";
}

<div class="container py-5">
    <div class="p-4 mb-4 bg-light rounded-3 shadow-sm border">
        <h4 class="mb-1">Thank you!</h4>
        <p class="mb-0">Your report has been submitted successfully.</p>
    </div>

    <div class="mb-4">
        <h5>What happens next</h5>
        <ol class="list-group list-group-numbered">
            <li class="list-group-item">Submitted — We have received your ticket.</li>
            <li class="list-group-item">Triaged — The team will verify and prioritise the issue.</li>
            <li class="list-group-item">Assigned — The issue will be assigned to a field team.</li>
        </ol>
        @if (ViewBag.Position != null)
        {
            <div class="alert alert-info mt-3">Current queue position: <strong>@ViewBag.Position</strong></div>
        }
    </div>

    <div class="card mb-3 shadow-sm">
        <div class="card-header bg-white fw-semibold">Ticket Details</div>
        <div class="card-body">
            <dl class="row">
                <dt class="col-sm-3">Ticket</dt>
                <dd class="col-sm-9"><strong>@(string.IsNullOrWhiteSpace(Model.TicketCode) ? Model.Id.ToString() : Model.TicketCode)</strong></dd>
                @if (ViewBag.Position != null)
                {
                    <dt class="col-sm-3">Queue Position</dt>
                    <dd class="col-sm-9">@ViewBag.Position</dd>
                }
                <dt class="col-sm-3">Location</dt>
                <dd class="col-sm-9">@Model.Location</dd>
                <dt class="col-sm-3">Category</dt>
                <dd class="col-sm-9">@Model.Category</dd>
                <dt class="col-sm-3">Description</dt>
                <dd class="col-sm-9 white-space-pre-line">@Model.Description</dd>
                <dt class="col-sm-3">Created</dt>
                <dd class="col-sm-9">@Model.CreatedAt.ToLocalTime()</dd>
                @if (!string.IsNullOrWhiteSpace(Model.FirstName) || !string.IsNullOrWhiteSpace(Model.LastName) || !string.IsNullOrWhiteSpace(Model.Email) || !string.IsNullOrWhiteSpace(Model.Phone))
                {
                    <dt class="col-sm-3">Contact</dt>
                    <dd class="col-sm-9">
                        <div>@(string.Join(" ", new[]{Model.FirstName, Model.LastName}.Where(s=>!string.IsNullOrWhiteSpace(s))))</div>
                        @if (!string.IsNullOrWhiteSpace(Model.Email)) {<div>Email: @Model.Email</div>}
                        @if (!string.IsNullOrWhiteSpace(Model.Phone)) {<div>Phone: @Model.Phone</div>}
                    </dd>
                }
                <dt class="col-sm-3">Attachments</dt>
                <dd class="col-sm-9">
                    @if (Model.AttachmentPaths?.Count > 0)
                    {
                        <ul>
                            @foreach (var p in Model.AttachmentPaths)
                            {
                                <li>@System.IO.Path.GetFileName(p)</li>
                            }
                        </ul>
                    }
                    else
                    {
                        <span>None</span>
                    }
                </dd>
            </dl>
        </div>
    </div>

    <a asp-controller="Home" asp-action="Index" class="btn btn-primary">Back to Main Menu</a>
</div>

@section Scripts {
    <script>
        // Show success toast once (on initial redirect only). If user refreshes or revisits, don’t repeat.
        (function(){
            const key = 'shownToast_@Model.Id';
            if (!sessionStorage.getItem(key)) {
                if (window.showToast) {
                    const code = '@(string.IsNullOrWhiteSpace(Model.TicketCode) ? Model.Id.ToString() : Model.TicketCode)';
                    const name = '@(string.Join(" ", new[]{Model.FirstName, Model.LastName}.Where(s=>!string.IsNullOrWhiteSpace(s))))';
                    const msg = (name && name.trim().length>0) ? `Thank you, ${name}. Ticket: ${code}` : `Issue submitted successfully. Ticket: ${code}`;
                    window.showToast(msg, 'text-bg-success');
                }
                if ('Notification' in window && Notification.permission === 'granted') {
                    const code = '@(string.IsNullOrWhiteSpace(Model.TicketCode) ? Model.Id.ToString() : Model.TicketCode)';
                    const name = '@(string.Join(" ", new[]{Model.FirstName, Model.LastName}.Where(s=>!string.IsNullOrWhiteSpace(s))))';
                    const body = (name && name.trim().length>0) ? `Thanks, ${name}. Ticket: ${code}` : `Issue submitted. Ticket: ${code}`;
                    new Notification('Municipality', { body });
                }
                sessionStorage.setItem(key, '1');
            }
        })();
    </script>
}

