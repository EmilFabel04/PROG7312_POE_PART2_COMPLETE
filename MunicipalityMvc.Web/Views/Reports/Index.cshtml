@model IReadOnlyList<MunicipalityMvc.Core.Models.IssueReport>
@{
    ViewData["Title"] = "All Reports";
}

<div class="container py-4">
    <div class="d-flex align-items-center justify-content-between mb-3">
        <div>
            <h2 class="mb-1">All Submitted Reports</h2>
            <p class="text-muted mb-0">Showing all items currently in the queue (oldest first).</p>
        </div>
        <div class="input-group" style="max-width: 320px;">
            <span class="input-group-text">Search</span>
            <input id="filter" type="text" class="form-control" placeholder="Ticket, location, category" />
        </div>
    </div>

    <table class="table table-striped align-middle" id="reportsTable">
        <thead>
            <tr>
                <th>Ticket</th>
                <th>Category</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
        @for (var i = 0; i < Model.Count; i++)
        {
            var item = Model[i];
            <tr>
                <td>
                    <span class="badge text-bg-secondary">@(string.IsNullOrWhiteSpace(item.TicketCode) ? item.Id.ToString() : item.TicketCode)</span>
                    <button type="button" class="btn btn-sm btn-link text-decoration-none copy-btn" data-copy="@(string.IsNullOrWhiteSpace(item.TicketCode) ? item.Id.ToString() : item.TicketCode)">Copy</button>
                </td>
                <td>@item.Category</td>
                <td>@item.Description</td>
            </tr>
        }
        </tbody>
    </table>

    <a asp-controller="Home" asp-action="Index" class="btn btn-link">Back to Main Menu</a>
</div>

@section Scripts {
    <script>
        (function(){
            const filter = document.getElementById('filter');
            const rows = Array.from(document.querySelectorAll('#reportsTable tbody tr'));
            filter.addEventListener('input', function(){
                const q = this.value.toLowerCase();
                rows.forEach(r => {
                    const txt = r.innerText.toLowerCase();
                    r.style.display = txt.includes(q) ? '' : 'none';
                });
            });
            document.querySelectorAll('.copy-btn').forEach(btn => {
                btn.addEventListener('click', async () => {
                    try {
                        await navigator.clipboard.writeText(btn.getAttribute('data-copy'));
                        if (window.showToast) window.showToast('Ticket copied to clipboard', 'text-bg-success');
                    } catch {}
                });
            });
        })();
    </script>
}


